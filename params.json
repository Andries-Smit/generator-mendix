{"name":"generator-mendix","tagline":"Yeoman generator for Mendix widgets","body":"# generator-mendix [![Build Status](https://secure.travis-ci.org/JelteMX/generator-mendix.png?branch=master)](https://travis-ci.org/JelteMX/generator-mendix)\r\n\r\n> [Yeoman](http://yeoman.io) generator for Mendix widgets.\r\n\r\n## About\r\n\r\nThis generator uses the Yeoman scaffolding tool to let you quickly create a [Mendix widget](https://world.mendix.com/display/public/howto50/Custom+Widget+Development) based on the latest [AppStoreWidgetBoilerPlate](https://github.com/mendix/AppStoreWidgetBoilerplate).\r\n\r\n### Prerequisites\r\n\r\nFirst, you need to have NodeJs installed. After that, you need Yeoman and the generator\r\n\r\n```bash\r\nnpm install -g yo generator-mendix\r\n```\r\n\r\n### Use the generator\r\n\r\n#####1.) Start the generator:\r\n\r\n```bash\r\nyo mendix\r\n```\r\n\r\n#####2.) This will show you the following screen:\r\n\r\n--> add image <--\r\n\r\nThe following options are asked:\r\n\r\n* name\r\n* package\r\n* description\r\n* copyright\r\n* license\r\n* version\r\n* author\r\n* Github username (optional)\r\n\r\nThe default value is shown between ``(`` ``)``\r\n\r\n#####3.) Now your widget will be created using the options and the boilerplate.\r\n\r\nIt will clone the boilerplate, rename your widget according to the options. It also includes a ``Gruntfile.js`` and ``package.json`` for development purposes (see below)\r\n\r\n### Grunt\r\n\r\nThe generator will include Grunt as well. This will make it possible to automate your widget development. \r\n\r\nYou need to have grunt installed globally (```npm install grunt-cli -g```) (this you need to do only once)\r\n\r\nThe following Grunt tasks are implemented:\r\n\r\n* ``start-mendix``\r\n\r\nThis will try to open the Modeler using the included test-project.\r\n\r\n* ``watch`` (alias for default, just run ``grunt``)\r\n\r\nThis watches for changes in your ``src`` folder. When a file is changed, it copies the change to the deployment-folder (so you do not have to restart your project when changing files **(with the exception of ``.xml`` files)**). It also automatically creates a ``.mpk`` file in your ``/dist`` and ``test/widgets`` folder.\r\n\r\n* ``build``\r\n\r\nCleans old ``.mpk`` files and creates a new one in your ``/dist`` folder\r\n\r\n#####Grunt can be started from command-line, or used by Grunt-plugins for different IDE's:\r\n\r\n* [WebStorm](https://www.jetbrains.com/webstorm/help/using-grunt-task-runner.html)\r\n* [Brackets](https://github.com/dhategan/brackets-grunt) \r\n* Visual Studio Code (has [built-in support for Grunt & Gulp](https://code.visualstudio.com/Docs/editor/tasks))\r\n* [Sublime Text](https://github.com/tvooo/sublime-grunt)\r\n* NetBeans (has [built-in support for Grunt](https://blogs.oracle.com/geertjan/entry/grunting_in_netbeans_ide))\r\n\r\n## TODO:\r\n\r\n* Gulp integration\r\n* Add JSHint (Grunt/Gulp) or ESLint (advantage of checking the AST for deprecated client API's)\r\n* Add Analytics\r\n* Check for updates\r\n* Move package.json & Gruntfile.js to Boilerplate\r\n\r\n## Issues\r\n\r\nIssues can be reported on [Github](https://github.com/JelteMX/generator-mendix/issues).\r\n\r\n## License\r\n\r\nApache 2\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}